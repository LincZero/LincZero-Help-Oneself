/* 正文标题区: #write */
/* [TOC]目录树区: .md-toc-content */
/* 侧边栏的目录大纲区: .sidebar-content */

/** 
 * 说明：
 *     Typora的标题共有6级，从h1到h6。
 *     个人习惯每篇文章都有一个总标题，有一个目录，所以h2级的标题前两个都不会计数。
 */ 

/**
 * 变量
 */
:root {
	/* --bg: rgb(235, 235, 235); */
	--text: rgb(211, 207, 201);
	--text_n: var(--bg);
	--text_link:#4183C4;
	--bg: rgb(35, 35, 35);
	--bg_deep: #1e1e1e;
	--bg_light: rgb(45, 45, 45);
	--bg_llight: rgb(80,80,80);
	/* --bg_n: rgb(190,190,180); */
	--bg_n: rgb(160,160,150);
	--active-file-bg-color: var(--bg_light);
	/* --control-text-color: var(--text); */
	--text-color: var(--text);
	--bg_select: rgb(0, 77, 170);
	/* --color1: rgb(107, 184, 246);
	--color2: rgb(235, 172, 193);
	--color3: rgb(140, 233, 180);
	--color4: rgb(244, 223, 191);
	--color5: rgb(249, 38, 114);
	--color6: rgb(216, 139, 97); */
	--color1: var(--bg);
	--color2: var(--bg);
	--color3: var(--bg);
	--color4: var(--bg);
	--color5: var(--bg);
	--color6: var(--bg);
	--color1_t: rgb(107, 184, 246);
	--color2_t: rgb(235, 172, 193);
	--color3_t: rgb(140, 233, 180);
	--color4_t: rgb(216, 139, 97);
	--color5_t: rgb(249, 38, 114);
	--color6_t: rgb(244, 223, 191);
}

/**
 * 原格式
 */
#typora-sidebar{
	border-color: var(--bg_deep);
}
.info-panel-tab-title,p,span,.md-list-item{
	color: var(--text);
}
a span{
	color: var(--text_link);
}
#write>.md-heading{
	border-bottom:none;
}
::selection {
	background:var(--bg_select);
}
input{
	color: var(--text) !important;
}

/*——————————————————————————————————————————————————————————————————————————————————————计数————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/**
 * < 重要CSS小样式 >
 * 标题自动标号（1）
 * 重设局全局计数器
 */
#write, .sidebar-content,.md-toc-content{
	/* 设置全局计数器的基准 */
    counter-reset: h1 /*不用h1可以设置为h2*/
}
#write>h1, /*改进为#write子类的标题才会起标号，这样可以设置不显示在[toc]和大纲上的“伪标题”*/
.outline-h1,
.md-toc-item.md-toc-h1 {
    counter-reset: h2
}
#write>h2,
.outline-h2,
.md-toc-item.md-toc-h2 {
    counter-reset: h3
}
#write>h3,
.outline-h3,
.md-toc-item.md-toc-h3 {
    counter-reset: h4
}
#write>h4,
.outline-h4,
.md-toc-item.md-toc-h4 {
    counter-reset: h5
}
#write>h5,
.outline-h5,
.md-toc-item.md-toc-h5 {
    counter-reset: h6
}

/**
 * < 重要CSS小样式 >
 * 标题自动标号（2）
 * 设置标题，并在每次设置完后使计数器+1
 */
#write>h1:before,/*正文标题*/
.outline-h1>.outline-item>.outline-label:before, /*大纲目录*/
.md-toc-item.md-toc-h1>.md-toc-inner:before { /*正文TOC目录*/
    counter-increment: h1;
    content: counter(h1) ". "
}
/* 使用h1标题时，去掉前两个h1标题的序号，包括正文标题、目录树和大纲 */
#write>h1:nth-of-type(1)>.md-plain, 
.outline-h1:nth-of-type(1)>.outline-item>.outline-label,
#write>h1:nth-of-type(2)>.md-plain,
.outline-h1:nth-of-type(2)>.outline-item>.outline-label
{
	color:var(--text);
}
#write>h1:nth-of-type(1):before, 
.outline-h1:nth-of-type(1)>.outline-item>.outline-label:before, 
.md-toc-item.md-toc-h1:nth-of-type(1)>.md-toc-inner:before
,#write>h1:nth-of-type(2):before,
.outline-h1:nth-of-type(2)>.outline-item>.outline-label:before,
.md-toc-item.md-toc-h1:nth-of-type(2)>.md-toc-inner:before
{
	counter-reset: h1;
	content: ""
}
#write>h2:before,
.outline-h2>.outline-item>.outline-label:before,
.md-toc-item.md-toc-h2>.md-toc-inner:before {
    counter-increment: h2;
    content: counter(h2) ". "
}
#write>h3:before,
#write>h3.md-focus.md-heading:before, /*h3~h6是有鼠标聚焦样式的*/
.outline-h3>.outline-item>.outline-label:before,
.md-toc-item.md-toc-h3>.md-toc-inner:before {
	text-decoration: none;
    counter-increment: h3;
    content: counter(h2) "." counter(h3) ". "
}
#write>h4:before,
#write>h4.md-focus.md-heading:before,
.outline-h4>.outline-item>.outline-label:before,
.md-toc-item.md-toc-h4>.md-toc-inner:before {
	text-decoration: none;
    counter-increment: h4;
    content: counter(h2) "." counter(h3) "." counter(h4) ". "
}
#write>h5:before,
#write>h5.md-focus.md-heading:before,
.outline-h5>.outline-item>.outline-label:before,
.md-toc-item.md-toc-h5>.md-toc-inner:before {
	text-decoration: none;
    counter-increment: h5;
    content: counter(h2) "." counter(h3) "." counter(h4) "." counter(h5) ". "
}
#write>h6:before,
#write>h6.md-focus.md-heading:before,
.outline-h6>.outline-item>.outline-label:before,
.md-toc-item.md-toc-h6>.md-toc-inner:before {
	text-decoration: none;
    counter-increment: h6;
    content: counter(h2) "." counter(h3) "." counter(h4) "." counter(h5) "." counter(h6) ". "
}

/**
 * < 重要CSS小样式 >
 * 标题自动标号（3）
 * 聚焦标题时的样式（默认h3~h6在聚焦时会缩进，标号不见）
 */
#write>h3.md-focus:before,
#write>h4.md-focus:before,
#write>h5.md-focus:before,
#write>h6.md-focus:before
/* h3.md-focus:before,
h4.md-focus:before,
h5.md-focus:before,
h6.md-focus:before */
{
    color: inherit;
    border: inherit;
    border-radius: inherit;
    position: inherit;
    left:initial;
    float: none;
    top:initial;
    font-size: inherit;
    padding-left: inherit;
    padding-right: inherit;
    vertical-align: inherit;
    font-weight: inherit;
    line-height: inherit;
}

/*——————————————————————————————————————————————————————————————————————————————————————大纲————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/**
 * < Linc的CSS小样式 >
 * 大纲目录样式
 * 多层级着色
 */
#outline-content .outline-h1>.outline-item {
	background-color: var(--color1);
	color: var(--color1_t);
}
#outline-content .outline-h1:nth-of-type(1)>.outline-item,
#outline-content .outline-h1:nth-of-type(2)>.outline-item {
	background-color: transparent; /*清除1、2个的背景*/
}
#outline-content .outline-h2>.outline-item {
	background-color: var(--color2);
	color: var(--color2_t);
}
#outline-content .outline-h3>.outline-item {
	background-color: var(--color3);
	color: var(--color3_t);
}
#outline-content .outline-h4>.outline-item {
	background-color: var(--color4);
	color: var(--color4_t);
}
#outline-content .outline-h5>.outline-item {
	background-color: var(--color5);
	color: var(--color5_t);
}
#outline-content .outline-h6>.outline-item {
	background-color: var(--color6);
	color: var(--color6_t);
}


/**
 * < Linc的CSS小样式 >
 * 大纲目录样式
 * 边距调整（目的是缩进第一级标题）
  + 缩进色块着色（多层级着色的基础上改进，该样式依赖于着色）
 */
/*是否清除项之间的间隔*/
/* #outline-content .outline-item {
	margin-top: 0 !important;
	margin-bottom: 0 !important;
} */
#outline-content {
	padding-left: 0 !important;
	padding-right: 0 !important;
}

#outline-content .outline-h1>.outline-item {
	padding-left: 6px;
}
#outline-content .outline-h2>.outline-item {
	padding-left: 12px;
}
#outline-content .outline-h3>.outline-item {
	padding-left: 26px;
}
#outline-content .outline-h4>.outline-item {
	padding-left: 40px;
}
#outline-content .outline-h5>.outline-item {
	padding-left: 54px;
}
#outline-content .outline-h6>.outline-item {
	padding-left: 68px;
}
#outline-content .outline-h1,
#outline-content .outline-h2,
#outline-content .outline-h3,
#outline-content .outline-h4,
#outline-content .outline-h5,
#outline-content .outline-h6, {
	clear: both;
}

/*现版本：第一级不缩进，且写法更清晰*/
#outline-content .outline-h3::before,
#outline-content .outline-h4::before,
#outline-content .outline-h5::before,
#outline-content .outline-h6::before{
	content: "";
	width: 0px;
	height: 25px;
	box-sizing: content-box;
	position: absolute;
	left:0;
	top:-2px;
	border-left: 14px solid var(--color2);
}
#outline-content .outline-h4::before,
#outline-content .outline-h5::before,
#outline-content .outline-h6::before {
	width: 14px;
	background-color: var(--color3);
}
#outline-content .outline-h5::before,
#outline-content .outline-h6::before {
	border-right: 14px solid var(--color4);
}
#outline-content .outline-h6::after {
	content: "";
	width: 0px;
	height: 25px;
	box-sizing: content-box;
	position: absolute;
	left:42px;
	top:-2px;
	border-left: 14px solid var(--color5);
}

/**
 * < Linc的CSS小样式 >
 * 大纲目录样式
 * 溢出不换行
 */
#outline-content .outline-item>.outline-label {
	overflow: hidden;
	text-overflow:ellipsis;
	white-space: nowrap;
}

/**
 * < Linc的CSS小样式 >
 * 大纲被激活项
 */
#outline-content .outline-item.outline-item-active{
	background-color: var(--bg_light);
}

/*——————————————————————————————————————————————————————————————————————————————————————文件————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/**
 * < Linc的重要CSS样式 >
 * 测栏样式
 * 大纲与文件浏览分离
 */
/*文件状态*/
/* #typora-sidebar.active-tab-files>.sidebar-content>#file-library{ } */
/*其中sidebar-content是flex布局*/
 /*大纲状态*/
#typora-sidebar.active-tab-outline>.sidebar-content {
	/* display: block; */
	flex-direction: row;
}
#typora-sidebar.active-tab-outline>.sidebar-content>#outline-content{
	min-width:50%;
	max-width: 50%;
	overflow-y: auto;
	flex-grow:0;
	
}
#typora-sidebar.active-tab-outline>.sidebar-content>#file-library{
	display: block !important; 
	order: -1;
	min-width:50%;
	max-width: 50%;
	overflow-y: auto;
	flex-grow:0;
}
#outline-content { /*分界边*/
	margin-left: 2px;
}

/**
 * < Linc的CSS小样式 >
 * 文件浏览器部分
 * 去除结尾为.assets的文件夹
 */
#file-library-tree .file-library-node.file-tree-node[data-path$=".assets"]{
	display: none;
}

/**
 * < Linc的CSS小样式 >
 * 文件浏览器样式
 * md文件的图标与后缀省略
 */
#file-library-tree .file-library-node.file-tree-node.file-library-file-node[data-path$=".md"]
>.file-node-content>.file-node-title>.file-node-title-ext-part,
#file-library-tree .file-library-node.file-tree-node.file-library-file-node[data-path$=".md"]
>.file-node-content>i
{
	display: none;
}

/**
 * < Linc的CSS小样式 >
 * 文件浏览器样式
 * 选中项去掉左边框
 */
#file-library-tree .file-tree-node.active>.file-node-background{
	border-left: none;
}

/**
 * < Linc的CSS小样式 >
 * 文件浏览器样式
 * 多层级着色
 * 文件不着色，文件夹着色
 * 首文件夹也不着色
 */
#file-library-tree .file-node-children
.file-node-background{
	height: 1.6875rem;/*29-2=27px*/
}
#file-library-tree .file-node-children
>div[data-is-directory="true"]>.file-node-background{
	background-color: var(--color1);
}
#file-library-tree .file-node-children
>div>.file-node-children
>div[data-is-directory="true"]>.file-node-background{
	background-color: var(--color2);
}
#file-library-tree .file-node-children
>div>.file-node-children
>div>.file-node-children
>div[data-is-directory="true"]>.file-node-background{
	background-color: var(--color3);
}
#file-library-tree .file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div[data-is-directory="true"]>.file-node-background{
	background-color: var(--color4);
}

#file-library-tree .file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div[data-is-directory="true"]>.file-node-background{
	background-color: var(--color5);
}

#file-library-tree .file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div[data-is-directory="true"]>.file-node-background{
	background-color: var(--color6);
}

#file-library-tree .file-node-children
>div[data-is-directory="true"]>.file-node-content,
#file-library-tree .file-node-children
>div[data-is-directory="true"]>.file-node-content span{
	color: var(--color1_t);
}
#file-library-tree .file-node-children
>div>.file-node-children
>div[data-is-directory="true"]>.file-node-content,
#file-library-tree .file-node-children
>div>.file-node-children
>div[data-is-directory="true"]>.file-node-content span{
	color: var(--color2_t);
}
#file-library-tree .file-node-children
>div>.file-node-children
>div>.file-node-children
>div[data-is-directory="true"]>.file-node-content,
#file-library-tree .file-node-children
>div>.file-node-children
>div>.file-node-children
>div[data-is-directory="true"]>.file-node-content span{
	color: var(--color3_t);
}
#file-library-tree .file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div[data-is-directory="true"]>.file-node-content,
#file-library-tree .file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div[data-is-directory="true"]>.file-node-content span{
	color: var(--color4_t);
}
#file-library-tree .file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div[data-is-directory="true"]>.file-node-content,
#file-library-tree .file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div[data-is-directory="true"]>.file-node-content span{
	color: var(--color5_t);
}
#file-library-tree .file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div[data-is-directory="true"]>.file-node-content,
#file-library-tree .file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div>.file-node-children
>div[data-is-directory="true"]>.file-node-content span{
	color: var(--color6_t);
}
/**
 * < Linc的CSS小样式 >
 * 文件浏览器样式
 * 边距调整 + 缩进色块着色（多层级着色的基础上改进，该样式依赖于着色）
 */
/*第三版 - 第一级不缩进、选择器结构两个大优化*/
#file-library-tree .file-node-root
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
.file-node-background::before{ /*最后一级不用子类选择器*/
	content: "";
	width: 14px;
	height: 30px;
	box-sizing: border-box;
	position: absolute;
	left:0;
	top:-3px;
	border-left: 14px solid var(--color2);
}
#file-library-tree .file-node-root
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
.file-node-background::before{
	width: 28px;
	background-color: var(--color3);
}
#file-library-tree .file-node-root
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
.file-node-background::before{
	 width: 42px;
	 border-right: 14px solid var(--color4);
}
#file-library-tree .file-node-root
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
.file-node-background::after{
	content: "";
	width: 14px;
	height: 30px;
	box-sizing: border-box;
	position: absolute;
	left: 42px;
	top:-3px;
	border-left: 14px solid var(--color5);
}
#file-library-tree .file-node-root
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
.file-node-background::after{
	width: 28px;
	background-color: var(--color6);
}
#file-library-tree .file-node-root
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
>.file-node-children>div
.file-node-background::after{
	width: 42px;
	border-right: 14px solid var(--color6);
}
/*缩进量调整，原14*/
#file-library-tree{
	padding-left: 0;
}
#file-library-tree .file-node-root.file-tree-node{
	padding-left: 8px;
}
#file-library-tree .file-node-root
>.file-node-children>.file-tree-node{
	padding-left: 4px;
}
#file-library-tree .file-node-root
>.file-node-children>div
 .file-node-children>.file-tree-node{
	padding-left: 2px;
}
#file-library-tree .file-node-root
>.file-node-children>div
>.file-node-children>div
 .file-node-children>.file-tree-node{
	padding-left: 14px;
}
#file-library-tree .file-node-root
 .file-node-children>.file-tree-node[data-is-directory="false"]{/*非目录文件*/
	padding-left: 8px !important;
}
/*——————————————————————————————————————————————————————————————————————————————————————正文————————————————————————————————————————————————————————————————————————————————————————————————————————————————*/
/**
 * < Linc的CSS小样式 >
 * 无大纲标题
 */
#write blockquote>.md-heading
{
	margin-left: -19px;
	margin-right: -15px;
}
#write li>.md-heading
{
	background: none;
	padding-left: 0 !important;
	padding-top: 0.625em !important;
	margin-bottom: 0.5rem !important;
}
#write ul>li:first-of-type>.md-heading
{
	padding-top: 0 !important;
}
/**
 * < Linc的CSS小样式 >
 * 正文样式
 * 标题着色
 */
#write h1 { /*不采用子选择器，允许伪标题着色*/
	background-color: var(--color1);
}
#write h1:nth-of-type(1),
#write h1:nth-of-type(2) {
	background: none;
}
#write h2 {
	background-color: var(--color2);
}
#write h3 {
	background-color: var(--color3);
}
#write h4 {
	background-color: var(--color4);
}
#write h5 {
	background-color: var(--color5);
}
#write h6 {
	background-color: var(--color6);
}
#write h1, #write h1 .md-plain{color: var(--color1_t);}
#write h2, #write h2 .md-plain{color: var(--color2_t);}
#write h3, #write h3 .md-plain{color: var(--color3_t);}
#write h4, #write h4 .md-plain{color: var(--color4_t);}
#write h5, #write h5 .md-plain{color: var(--color5_t);}
#write h6, #write h6 .md-plain{color: var(--color6_t);}
#write h1,
#write h2,
#write h3,
#write h4,
#write h5,
#write h6 {
	padding-left: 10px !important;
}
#write h1::before,
#write h2::before,
#write h3::before,
#write h4::before,
#write h5::before,
#write h6::before {
	padding-left: 0 !important; /*解决选中标题时缩进的问题*/
}
/**
 * < Linc的CSS小样式 >
 * 正文页面样式
 * 媒体查询适配宽度
 */
/* 修改规则：
 * 窗口<1400px时：max-width:860px;
 * 窗口>1400px时：max-width:1024px;
 * 窗口>1800px是：max-width:1200px;
 */
@media only screen and (min-width: 1270px) { /*1280px为2k屏的半屏像素，分屏时做笔记时比较方便*/
	#write {
		max-width: 1200px !important;
	}
}
/**
 * < Linc的CSS小样式 >
 * 正文样式
 * 其他小样式
 */
/*全局背景亮度，注意导出名不同*/
content,
.typora-export-content{
	/*#write不包括边框和搜索栏*/
	background-color: var(--bg);
}
#typora-sidebar{
	/*#typora-sidebar包括#file-library-tree和#outline-content已经以外的东西*/
	background-color: var(--bg);
}
/*图像*/
#write img {
	margin-left:0 !important;
}
/*引用框*/
#write blockquote {
	border-left-color: var(--color1) !important;
	border-top-left-radius: 2px;
	border-bottom-left-radius: 2px;
	color: #444444 !important;
	background-color: var(--bg_light) !important;
	/* margin: 6.4px 0;
	padding-top: 6.4px;
	padding-bottom: 6.4px; */
	/*line-height: 1.50rem; /*稍微增大了*/
	padding-right: 0;
}

/*表格 - 复合样式删去表头*/
#write .md-table thead>tr>th span{ /*表头*/
	color: var(--color1_t);
}
#write blockquote .md-table-fig{
	/*margin-left: -19px;/**/
	margin-left: -15px;
}
#write blockquote .md-table thead>tr>th{ /*表头*/
	/*display: none;*/
	font-weight: inherit;
}
#write blockquote .md-table thead>tr>th span{ /*表头*/
	color: var(--text);
}
/*表格 - 复合样式水平滑动*/
/* 滑动条往上原理：将父元素翻转，再将子元素翻转回来*/
#write blockquote .md-table{
	white-space:nowrap; /*不换行*/
}
#write blockquote .md-table-fig{
	overflow-x:auto;
	transform:scaleY(-1);
}
#write blockquote .md-table-fig>.md-table{
	transform:scaleY(-1);
}
#write blockquote .md-table-fig::-webkit-scrollbar{
	/*滚动条整体*/
	height:15px;
}
#write blockquote .md-table-fig::-webkit-scrollbar-thumb{
	/*滚动条里的滑块*/
	border-radius: 7.5px;
	background-color: var(--bg_llight);
}
/*表格 - 隔行深色*/
#write .md-table thead>tr>th{ /*表头*/
	background-color: var(--bg);
}
#write .md-table tbody>tr{ /*表体*/
	background-color: var(--bg);
}
#write .md-table tbody>tr:nth-child(2n-1){ /*表体*/
	background-color: var(--bg_light);
}
/*表格 - 换行符隐藏*/
.md-br.md-tag::after{/*br其主要靠:after的display为block进行换行*/
	content: '';
	display: block;
}
.md-br.md-tag>.md-br-content{/*未选中时*//*display为none时不换行，所以给其父对象重新弄一个blick after伪元素*/
	display: none; 
}
.md-br.md-tag.md-expand>.md-br-content{/*选中时*/
	display: inline;
}
/*表格 - 扩展规则 - 表格内分割线，无法实现*/
/* #write blockquote .md-table tbody>tr>td>span[data="123456"]{
	background-color: #96376A;
} */


/*数学公式框*/
#write .md-math-block {
	border-left: 4px solid rgb(242, 103, 34) !important;
	/* background-color: #f8f8f8 !important; */
	margin: 14px 0;
	padding: 2px 0; /*外边框分2px到内边距*/
	background-color: var(--bg_deep);
}
#write .md-rawblock-container.md-math-container { /*非编辑模式下的公式区？*/
	padding-left: 20px;
	color: var(--text);
}
#write .code-tooltip { /*编辑模式下的公式区*/
	padding-left: 20px;
	color: var(--text);
}
#write .md-math-block .MathJax_SVG {
	float: left !important;
}
/*数学公式框 - 通用*/
#write .MathJax_SVG { /*大&小公式块*/
	/* float: left !important; 
	 * 行内该样式有BUG：Typora中正常，导出pdf或html时会有问题：
	 * （1）行内代码会位于其他文字左侧
	 * （2）后面紧跟的元素会float上去
	 */
	zoom: 100% !important; /*默认90%*/
	font-weight: normal !important; /*默认400*/
	/* font-family: "Open Sans","Clear Sans", "Helvetica Neue", Helvetica, Arial, sans-serif !important; */
}
/*数学公式框 - 行内*/
#write .md-inline-math.math-jax-postprocess{
	padding: 0 3px !important;
	margin: 0 2px !important;
	/* transform: translateY(0.1875rem); */
	/* background-color: #fcfcfc !important; */
}
/*加粗*/
#write strong span{
	/* Typora专用选择器 strong span.md-plain[md-inline="plain"]，导出外用会失效 */
	color: #f56c6c !important;
}
/*高亮*/
#write .md-pair-s[md-inline="highlight"] mark .md-plain{
	color:black;
}
/*搜索高亮*/
#write .md-search-hit{
	background-color: #decb6b;
}
/*删除线*/
#write del {
	text-decoration: line-through;
	text-decoration-style: solid;
	text-decoration-color: red;
	text-decoration-thickness: auto; /*找不到属性？*/
}
#write del span{
	color:gray;
}
/*小引用块*/
/* 这个行内代码不用Typora的属性选择的话，外面那层根本选不了（应该）
 * 即不能用.md-pair-s
 * 加粗：span.md-pair-s>strong>  span.md-plain
 * 斜体：span.md-pair-s>em____>  span.md-plain
 * 粗斜：span.md-pair-s>strong>
 *      span.md-pair-s>em____>  span.md-plain
 * 代码：span.md-pair-s>
 **/
#write code {
	/*Typora专用选择器 span[md-inline="code"]，导出外用会失效*/
	margin: 0 3px !important;
	padding: 2px 3px !important;
	height: 100%;
	box-sizing: border-box !important;
	background-color: #e496ad !important;
	border-radius: 0.3em !important;
	border: none !important;
	
	color: #96376a !important; /*#f56c6c*/
	font-size: 1em; /* 不能rem，需要根据标题大小而改变 */
	line-height: 1em;
	font-weight: 800 !important;
	/* border: solid 1px #aaa !important; */ /*会增加厚度，舍弃*/
	/* box-shadow: 0 0 1px #aaa !important; */
}
.outline-item code { /*大纲中的code，防止高度变高导致色块断开*/
	margin-top: -5px;
	line-height: 0.75rem;
	border: none
}

/* 元数据框 */
#write pre.md-meta-block.md-end-block {
	background-color: var(--bg_deep);
}

/*代码框 - 数字列。.CodeMirror-sizer好像是只有代码类型才有*/
#write pre.md-fences.md-end-block{
	border:none;
	background: none !important; 
	padding-top: 0;
	padding-bottom: 0;
}
#write pre.md-fences.md-end-block
 .CodeMirror-scroll>.CodeMirror-sizer{/*代码部分*/
	margin-top: 8px;
	margin-bottom: 6px !important;
}
#write pre.md-fences.md-end-block
 .CodeMirror-scroll>.CodeMirror-gutters{/*数字列，absolute布局*/
	background-color: var(--bg_deep);
	height: 100% !important;
}

/*代码框 - mermaid的preview部分 的边，黑色变白色*/
/* #write pre.md-fences.md-end-block[lang="mermaid"]
>.md-diagram-panel>.md-diagram-panel-preview .edgePath,
#write pre.md-fences.md-end-block[lang="mermaid"]
>.md-diagram-panel>.md-diagram-panel-preview .edgePath>.path{
	background-color: var(--text);
	stroke: var(--text) !important;
} */

/*代码框- mermaid 底色*/
#write pre.md-fences.md-end-block[lang="mermaid"]
>.md-diagram-panel>.md-diagram-panel-preview svg{
	 background-color: #f8f8f8 !important;
	 
 }
 #write pre.md-fences.md-end-block[lang="mermaid"]
 >.md-diagram-panel>.md-diagram-panel-preview svg span {
	 color: #000000; 
 }

/*html的img标签，小心Gravizo引擎出来的图片的背景是透明的，所以这里只能白底*/
span[md-inline="imgtag"]>img{
	background-color: #dddddd;
}

/* https://www.cnblogs.com/Anber82/p/14120414.html */
/* https://codemirror.net/ */
/* https://codemirror.net/theme/ */
/* 将其代码中所有的.cm-s-dracula改为.cm-s-inner */
/* Based on Sublime Text's Monokai theme */

/* .cm-s-inner.CodeMirror { background: #272822; color: #f8f8f2; }
.cm-s-inner div.CodeMirror-selected { background: #49483E; }
.cm-s-inner .CodeMirror-line::selection, .cm-s-inner .CodeMirror-line > span::selection, .cm-s-inner .CodeMirror-line > span > span::selection { background: rgba(73, 72, 62, .99); }
.cm-s-inner .CodeMirror-line::-moz-selection, .cm-s-inner .CodeMirror-line > span::-moz-selection, .cm-s-inner .CodeMirror-line > span > span::-moz-selection { background: rgba(73, 72, 62, .99); }
.cm-s-inner .CodeMirror-gutters { background: #272822; border-right: 0px; }
.cm-s-inner .CodeMirror-guttermarker { color: white; }
.cm-s-inner .CodeMirror-guttermarker-subtle { color: #d0d0d0; }
.cm-s-inner .CodeMirror-linenumber { color: #d0d0d0; }
.cm-s-inner .CodeMirror-cursor { border-left: 1px solid #f8f8f0; }

.cm-s-inner span.cm-comment { color: #75715e; }
.cm-s-inner span.cm-atom { color: #ae81ff; }
.cm-s-inner span.cm-number { color: #ae81ff; }

.cm-s-inner span.cm-comment.cm-attribute { color: #97b757; }
.cm-s-inner span.cm-comment.cm-def { color: #bc9262; }
.cm-s-inner span.cm-comment.cm-tag { color: #bc6283; }
.cm-s-inner span.cm-comment.cm-type { color: #5998a6; }

.cm-s-inner span.cm-property, .cm-s-inner span.cm-attribute { color: #a6e22e; }
.cm-s-inner span.cm-keyword { color: #f92672; }
.cm-s-inner span.cm-builtin { color: #66d9ef; }
.cm-s-inner span.cm-string { color: #e6db74; }

.cm-s-inner span.cm-variable { color: #f8f8f2; }
.cm-s-inner span.cm-variable-2 { color: #9effff; }
.cm-s-inner span.cm-variable-3, .cm-s-inner span.cm-type { color: #66d9ef; }
.cm-s-inner span.cm-def { color: #fd971f; }
.cm-s-inner span.cm-bracket { color: #f8f8f2; }
.cm-s-inner span.cm-tag { color: #f92672; }
.cm-s-inner span.cm-header { color: #ae81ff; }
.cm-s-inner span.cm-link { color: #ae81ff; }
.cm-s-inner span.cm-error { background: #f92672; color: #f8f8f0; }

.cm-s-inner .CodeMirror-activeline-background { background: #373831; }
.cm-s-inner .CodeMirror-matchingbracket {
  text-decoration: underline;
  color: white !important;
} */















/** mermaid 官网样式
 *
 */

/* 略 */


/** 代码框网上样式
 * 个人改
 */

/*光标*/
.CodeMirror .CodeMirror-cursors>div.CodeMirror-cursor{
	border-left: 1px solid var(--text);
}

/* 注释 */
.cm-s-inner .cm-comment {
  color: #409946;/*#676E95;*/
}

/* 背景 */
.cm-s-inner.CodeMirror {
  background-color: #1e1e1e/*#292D3E*/;
  color: #A6ACCD;
}

.cm-s-inner .CodeMirror-gutters {
  background: #1e1e1e/*#292D3E*/;
  color: #676E95;
  border: none;
}

/* 标号 */
.cm-s-inner .CodeMirror-guttermarker,
.cm-s-inner .CodeMirror-guttermarker-subtle,
.cm-s-inner .CodeMirror-linenumber {
  color: #676E95;
}

/*
  Name:       material
  Author:     Mattia Astorino (http://github.com/equinusocio)
  Website:    https://material-theme.site/
*/

.cm-s-inner .CodeMirror-cursor {
  border-left: 1px solid #FFCC00;
}
.cm-s-inner.cm-fat-cursor .CodeMirror-cursor {
  background-color: #607c8b80 !important;
}
.cm-s-inner .cm-animate-fat-cursor {
  background-color: #607c8b80 !important;
}

.cm-s-inner div.CodeMirror-selected {
  background: rgba(113, 124, 180, 0.2);
}

.cm-s-inner.CodeMirror-focused div.CodeMirror-selected {
  background: rgba(113, 124, 180, 0.2);
}

.cm-s-inner .CodeMirror-line::selection,
.cm-s-inner .CodeMirror-line>span::selection,
.cm-s-inner .CodeMirror-line>span>span::selection {
  background: rgba(128, 203, 196, 0.2);
}

.cm-s-inner .CodeMirror-line::-moz-selection,
.cm-s-inner .CodeMirror-line>span::-moz-selection,
.cm-s-inner .CodeMirror-line>span>span::-moz-selection {
  background: rgba(128, 203, 196, 0.2);
}

.cm-s-inner .CodeMirror-activeline-background {
  background: rgba(0, 0, 0, 0.4);
}

.cm-s-inner .cm-keyword {
  color: #C792EA;
}

.cm-s-inner .cm-operator {
  color: #89DDFF;
}

.cm-s-inner .cm-variable-2 {
  color: #EEFFFF;
}

.cm-s-inner .cm-variable-3,
.cm-s-inner .cm-type {
  color: #f07178;
}

.cm-s-inner .cm-builtin {
  color: #FFCB6B;
}

.cm-s-inner .cm-atom {
  color: #F78C6C;
}

.cm-s-inner .cm-number {
  color: #FF5370;
}

.cm-s-inner .cm-def {
  color: #82AAFF;
}

.cm-s-inner .cm-string {
  color: #C3E88D;
}

.cm-s-inner .cm-string-2 {
  color: #f07178;
}

.cm-s-inner .cm-variable {
  color: #f07178;
}

.cm-s-inner .cm-tag {
  color: #FF5370;
}

.cm-s-inner .cm-meta {
  color: #FFCB6B;
}

.cm-s-inner .cm-attribute {
  color: #C792EA;
}

.cm-s-inner .cm-property {
  color: #C792EA;
}

.cm-s-inner .cm-qualifier {
  color: #DECB6B;
}

.cm-s-inner .cm-variable-3,
.cm-s-inner .cm-type {
  color: #DECB6B;
}


.cm-s-inner .cm-error {
  color: rgba(255, 255, 255, 1.0);
  background-color: #FF5370;
}

.cm-s-inner .CodeMirror-matchingbracket {
  text-decoration: underline;
  color: white !important;
}